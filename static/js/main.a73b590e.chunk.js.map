{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/TodoInfo/TodoInfo.jsx","components/TodoList/TodoList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","email","username","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","id","todosFromServer","userId","usersFromServer","find","App","TodoPropTypes","PropTypes","shape","number","isRequired","string","bool","name","propTypes","arrayOf","ReactDOM","render","document","getElementById"],"mappings":"mqmBAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCHMG,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,MAAOR,EAASM,EAATN,KAE1B,OACE,0BACEG,UAAWM,IAAG,WAAY,CAAE,sBAAuBF,IADrD,UAGE,oBAAIJ,UAAU,kBAAd,SACGK,IAGFR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,SCblBU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKO,UCQ/B,IAAMF,EAAQG,EAAgBF,KAAI,SAAAN,GAAI,kCACxCA,GADwC,IAE3CN,MAPmBe,EAODT,EAAKS,OANhBC,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKa,KAAOE,MACzC,QAFT,IAAqBA,KAURG,EAAM,kBACjB,sBAAKf,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUQ,MAAOA,QAIfQ,EAAgBC,IAAUC,MAAM,CACpCR,GAAIO,IAAUE,OAAOC,WACrBf,MAAOY,IAAUI,OAAOD,WACxBR,OAAQK,IAAUE,OAAOC,WACzBhB,UAAWa,IAAUK,KAAKF,WAC1BvB,KAAMoB,IAAUC,MAAM,CACpBR,GAAIO,IAAUE,OAAOC,WACrBG,KAAMN,IAAUI,OAAOD,WACvBrB,SAAUkB,IAAUI,OAAOD,WAC3BtB,MAAOmB,IAAUI,OAAOD,eAI5Bb,EAASiB,UAAY,CACnBhB,MAAOS,IAAUQ,QAAQT,GAAeI,YCpC1CM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a73b590e.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, username } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {username}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\nexport const TodoInfo = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <article\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\nexport const TodoList = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport PropTypes from 'prop-types';\n\nimport todosFromServer from './api/todos.json';\nimport usersFromServer from './api/users.json';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">Static list of todos</h1>\n    <TodoList todos={todos} />\n  </div>\n);\n\nconst TodoPropTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }),\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoPropTypes).isRequired,\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}